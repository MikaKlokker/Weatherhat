#!/bin/python
import math
import time
import RPi.GPIO as GPIO
import ST7789
from PIL import Image, ImageDraw, ImageFont
import weatherhat
import cloud
import lokaal

temperature = 0
wind_speed = 0
pressure = 0
windrichting_tekst = ""
rain = 0
font_size = 13
start_time = time.time()
FPS = 1
DISPLAY_WIDTH = 240
DISPLAY_HEIGHT = 240
SPI_SPEED_MHZ = 80
COLOR_WHITE = (255, 255, 255)
COLOR_BLUE = (31, 137, 251)
COLOR_GREEN = (99, 255, 124)
COLOR_YELLOW = (254, 219, 82)
COLOR_RED = (247, 0, 63)
COLOR_BLACK = (0, 0, 0)
COLOR_GREY = (100, 100, 100)
OFFSET = -22

class WeatherStationApp:
    def __init__(self):
        self.display = ST7789.ST7789(
            rotation=90,
            port=0,
            cs=1,
            dc=9,
            backlight=12,
            spi_speed_hz=SPI_SPEED_MHZ * 1000 * 1000,
            width=DISPLAY_WIDTH,
            height=DISPLAY_HEIGHT
        )
        self.image = Image.new("RGBA", (DISPLAY_WIDTH, DISPLAY_HEIGHT), color=(255, 255, 255))
        self.draw = ImageDraw.Draw(self.image)
        self.sensor_data = self.initialize_sensor_data()
        self.custom_font = ImageFont.load_default()

    def initialize_sensor_data(self):
        sensor = weatherhat.WeatherHAT()
        sensor.temperature_offset = OFFSET
        return sensor

    def update_sensor_data(self):
        self.sensor_data.update(interval=5.0)

    def render_display(self):
        global temperature, wind_speed, pressure, windrichting_tekst, rain
        self.draw.rectangle((0, 0, DISPLAY_WIDTH, DISPLAY_HEIGHT), fill=COLOR_BLACK)

        temperature = round(self.sensor_data.temperature, 1)
        pressure = round(self.sensor_data.pressure, 1)
        wind_speed = round(self.sensor_data.wind_speed, 1)
        wind_direction = self.sensor_data.wind_direction
        rain = round(self.sensor_data.rain, 1)

        windrichting_tekst = ""
        if 22.5 <= wind_direction < 67.5:
            windrichting_tekst = "Noord-Oost"
        elif 67.5 <= wind_direction < 112.5:
            windrichting_tekst = "Oost"
        elif 112.5 <= wind_direction < 157.5:
            windrichting_tekst = "Zuid-Oost"
        elif 157.5 <= wind_direction < 202.5:
            windrichting_tekst = "Zuid"
        elif 202.5 <= wind_direction < 247.5:
            windrichting_tekst = "Zuid-West"
        elif 247.5 <= wind_direction < 292.5:
            windrichting_tekst = "West"
        elif 292.5 <= wind_direction < 337.5:
            windrichting_tekst = "Noord-West"
        else:
            windrichting_tekst = "Noord"

        self.draw.text((10, 10), "Weerstation", font=self.custom_font, fill=COLOR_RED)
        self.draw.text((10, 70), f"Luchtdruk: {pressure} hPa", font=self.custom_font, fill=COLOR_WHITE)
        self.draw.text((10, 100), f"Wind snelheid: {wind_speed} m/s", font=self.custom_font, fill=COLOR_WHITE)
        self.draw.text((10, 130), f"Wind Richting: {windrichting_tekst}", font=self.custom_font, fill=COLOR_WHITE)
        self.draw.text((10, 160), f"Regen: {rain} mm", font=self.custom_font, fill=COLOR_WHITE)
        self.draw.text((10, 190), f"Termperatuur: {temperature}Â°C", font=self.custom_font, fill=COLOR_WHITE)

    def run(self):
        global start_time
        while True:
            self.update_sensor_data()
            self.render_display()
            self.display.display(self.image)
            database()
            check_sproei_installatie()
            time.sleep(10 / FPS)

def database():
    try:
        print("cloud versturen")
        cloud.GegevensOpslaan(temperature, pressure, wind_speed, rain, windrichting_tekst)
    except Exception as e:
        print("lokaal versturen")
        print(f"Error in DatabaseServer: {e}")
        lokaal.GegevensOpslaan(windrichting_tekst, wind_speed, rain, temperature, pressure)

def check_sproei_installatie():
    global start_time, rain
    current_time = time.time()
    if (current_time - start_time) >= (48 * 3600):  
        if rain < 15:
            print("Sproei-installatie geactiveerd voor 30 minuten!")
            start_time = current_time 

if __name__ == "__main__":
    app = WeatherStationApp()
    app.run()
